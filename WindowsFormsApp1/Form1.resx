<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>